[
    {   "comment": "Editor font",
        "key": "font_name",
        "def_val": "Courier New",
        "chapter":"Text",
        "tags":["font","text"]
    },
    {   "comment": "Editor font",
        "key": "font_size",
        "def_val": 9,
        "chapter":"Text",
        "tags":["font","text"]
    },
    {   "comment": "Editor font quality",
        "key": "font_quality",
        "def_val": 0,
        "format": "enum_i",
        "dct":[
          [0, "Default"],
          [1, "Draft"],
          [2, "Proof"],
          [3, "Non Antialiased"],
          [4, "Antialiased"],
          [5, "Cleartype"],
          [6, "Cleartype Natural"]
        ],
        "chapter":"UI",
        "tags":["font","text"]
    },
    {   "comment": [
            "Double-buffering of UI controls",
            "If app shows flickering, set to true",
            "If high-DPI monitor (eg Retina) shows blurred text, set to false",
            "Option has suffixes for main OSes"],
        "key":"ui_buffered",
        "def_val": true,
        "chapter":"",
        "tags":["trick"]
    },
    {   "comment": [
            "Double-buffering of UI controls",
            "If app shows flickering, set to true",
            "If high-DPI monitor (eg Retina) shows blurred text, set to false",
            "Option has suffixes for main OSes"],
        "key": "ui_buffered__linux",
        "def_val": true,
        "chapter":"",
        "tags":["trick"]
    },
    {   "comment": [
            "Double-buffering of UI controls",
            "If app shows flickering, set to true",
            "If high-DPI monitor (eg Retina) shows blurred text, set to false",
            "Option has suffixes for main OSes"],
        "key": "ui_buffered__osx",
        "def_val": false,
        "chapter":"",
        "tags":["trick"]
    },
    {   "comment": "UI elements font",
        "key": "ui_font_name",
        "def_val": "default",
        "chapter":"UI",
        "tags":["font","env"]
    },
    {   "comment": "UI elements font",
        "key": "ui_font_size",
        "def_val": 9,
        "chapter":"UI",
        "tags":["font","env"]
    },
    {   "comment": "Output/Validate panel font",
        "key": "ui_font_output_name",
        "def_val": "default",
        "chapter":"UI",
        "tags":["font","env"]
    },
    {   "comment": "Output/Validate panel font",
        "key": "ui_font_output_size",
        "def_val": 9,
        "chapter":"UI",
        "tags":["font","env"]
    },
    {   "comment": "Allow to run only one instance of program",
        "key": "ui_one_instance",
        "def_val": false,
        "chapter":"",
        "tags":["start"]
    },
    {   "comment": "File-change notification: enabled",
        "key": "ui_notif",
        "def_val": true,
        "chapter":"UI",
        "tags":["reload"]
    },
    {   "comment": "File-change notification: watch timer interval, seconds",
        "key": "ui_notif_time",
        "def_val": 2,
        "chapter":"UI",
        "tags":["reload"]
    },
    {   "comment": "Non-text files",
        "key": "ui_non_text",
        "def_val": 0,
        "format": "enum_i",
        "dct":[ [0, "prompt"],
                [1, "open"],
                [2, "don't open"]],
        "chapter":"",
        "tags":["open"]
    },
    {   "comment": "Non-text files detection buffer size, kb",
        "key": "ui_non_text_buffer",
        "def_val": 64,
        "chapter":"",
        "tags":["open"]
    },
    {   "comment": "Command \"Reload\": if caret on last line, after reload put caret to new last line",
        "key": "ui_reload_tail",
        "def_val": true,
        "chapter":"",
        "tags":["reload"]
    },
    {   "comment": "Group lexers menu by 1st char of name",
        "key": "ui_lexers_grouped",
        "def_val": true,
        "chapter":"UI",
        "tags":["menu","lexer"]
    },
    {   "comment": "Highlight BG of lines with carets",
        "key": "show_cur_line",
        "def_val": false,
        "chapter":"Caret(s)",
        "tags":["carets","highlight"]
    },
    {   "comment": ["Highlight BG of lines with carets,",
                    "only minimal part of line, if line wrapped"],
        "key": "show_cur_line_minimal",
        "def_val": true,
        "chapter":"Caret(s)",
        "tags":["carets","highlight"]
    },
    {   "comment": ["Highlight BG of lines with carets,",
                    "only for focused editor"],
        "key": "show_cur_line_only_focused",
        "def_val": false,
        "chapter":"Caret(s)",
        "tags":["carets","highlight"]
    },
    {   "comment": "Show additional vert-lines at carets position",
        "key": "show_cur_column",
        "def_val": false,
        "chapter":"Caret(s)",
        "tags":["carets","vert-line"]
    },
    {   "comment": "Allow last line to scroll to the top of window",
        "key": "show_last_line_on_top",
        "def_val": true,
        "chapter":"UI",
        "tags":["scroll"]
    },
    {   "comment": "Hilite selected block BG till right edge of window",
        "key": "show_full_sel_bg",
        "def_val": false,
        "chapter":"Selection",
        "tags":["highlight","selection"]
    },
    {   "comment": "Hilite syntax-defined blocks BG till right edge if window",
        "key": "show_full_syntax_bg",
        "def_val": true,
        "chapter":"Selection",
        "tags":["highlight","selection"]
    },
    {   "comment": "On dragging vert-scrollbar, show line-number hint at the top-right corner",
        "key": "show_hint_on_vert_scroll",
        "def_val": false,
        "chapter":"UI",
        "tags":["scroll","line numbers"]
    },
    {   "comment": ["Enable caret-depending highlighting:",
                    "e.g. Pascal hilites \"begin\"/\"end\" with green when caret is inside block,",
                    "HTML/XML hilites opening/closing tags when caret is inside tag"],
        "key": "lexer_dynamic_hilite",
        "def_val": true,
        "chapter":"Lexer",
        "tags":["caret","highlighting","lexer"]
    },
    {   "comment": ["Max number of lines in editor, for which dynamic-hilite works",
                    "Reason for option: dynamic-hilite disables hiliting cache, so slows down scrolling"],
        "key": "lexer_dynamic_hilite_max_lines",
        "def_val": 2000,
        "chapter":"UI",
        "tags":["highlighting"]
    },
    {   "comment": ["Enable lexers' horizontal line separators",
                    "e.g. Pascal lexer: green lines above funcs"],
        "key": "lexer_line_separators",
        "def_val": false,
        "chapter":"Lexer",
        "tags":["lexer"]
    },
    {   "comment": "Style of folding",
        "key": "fold_style",
        "def_val": 1,
        "format": "enum_i",
        "dct":[
              [0, "if fold-hint empty: [...] from fold-pos, else hint"],
              [1, "if fold-hint empty: [line...] from fold-pos, else hint"],
              [2, "if fold-hint empty: [...] after line, else hint"],
              [3, "always [...] after line"],
              [4, "horiz colored line below line text"]
        ],
        "chapter":"Folding",
        "tags":["folding"]
    },
    {   "comment": "If no selection, \"Copy to clipboard\" will take entire line with caret",
        "key": "copy_line_if_no_sel",
        "def_val": true,
        "chapter":"Clipboard",
        "tags":["clipboard"]
    },
    {   "comment": "If no selection, \"Cut to clipboard\" will take entire line with caret",
        "key": "cut_line_if_no_sel",
        "def_val": false,
        "chapter":"Clipboard",
        "tags":["clipboard"]
    },
    {   "comment": "If text typed, delete selection first",
        "key": "ovr_sel",
        "def_val": true,
        "chapter":"Selection",
        "tags":["clipboard"]
    },
    {   "comment": ["If text pasted from clipboard, and \"overwrite\" mode on (Ins key),",
                    "then pasted text overwrites editor text"],
        "key": "ovr_on_paste",
        "def_val": false,
        "chapter":"Clipboard",
        "tags":["clipboard"]
    },
    {   "comment": "On saving file: delete spaces at lines ends",
        "key": "saving_trim_spaces",
        "def_val": false,
        "chapter":"File",
        "tags":["saving"]
    },
    {   "comment": "On saving file: force end-of-line chars at file end (if not entered)",
        "key": "saving_force_final_eol",
        "def_val": false,
        "chapter":"File",
        "tags":["saving"]
    },
    {   "comment": [
            "jump-next-word, jump-prev-word, select-word (double-click) will",
            "see these additional chars as \"letters\" and select them like letters.",
            "Don't enter here: Latin/Rus/Greek/German letters, \"0\"..\"9\", \"_\".",
            "Note: config read as utf8-no-bom."],
        "key": "word_chars",
        "def_val": "",
        "chapter":"Jumping",
        "tags":["jumping"]
    },
    {   "comment": [
            "Show these unicode chars as \"xNNNN\" hex codes.",
            "Some chars are here by default: http://unicode.org/reports/tr9/#Directional_Formatting_Characters",
            "Note: config is read as utf8-no-bom."],
        "key": "hex_chars",
        "def_val": "",
        "chapter":"Text",
        "tags":["text","unicode"]
    },
    {   "comment": "Additional pixels per char-cell",
        "key": "spacing_x",
        "def_val": 0,
        "chapter":"Text",
        "tags":["text","spacing"]
    },
    {   "comment": "Additional pixels per char-cell",
        "key": "spacing_y",
        "def_val": 1,
        "chapter":"Text",
        "tags":["text","spacing"]
    },
    {   "comment": "Tab-char width",
        "key": "tab_size",
        "def_val": 8,
        "chapter":"Text",
        "tags":["tab-char"]
    },
    {   "comment": "Tab-key enters spaces (instead of tab-char)",
        "key": "tab_spaces",
        "def_val": false,
        "chapter":"Text",
        "tags":["tab-key","tab-char"]
    },
    {   "comment": "Max x-position, before which tab-chars expand to N spaces (after it to 1 space)",
        "key": "tab_max_pos_expanded",
        "def_val": 500,
        "chapter":"Text",
        "tags":["tab-char"]
    },
    {   "comment": "Enable gutter (all columns at the left side)",
        "key": "gutter_show",
        "def_val": true,
        "chapter":"UI",
        "tags":["env","gutter"]
    },
    {   "comment": "Show gutter's folding column",
        "key": "gutter_fold",
        "def_val": true,
        "chapter":"UI",
        "tags":["env","gutter"]
    },
    {   "comment": "If false, folding lines auto-hide on mouse-leave",
        "key": "gutter_fold_always",
        "def_val": true,
        "chapter":"Folding",
        "tags":["folding"]
    },
    {   "comment": "Style of folding icons",
        "key": "gutter_fold_icons",
        "def_val": 0,
        "format": "enum_i",
        "dct":[ [0, "plus/minus"],
                [1, "triangles"]],
        "chapter":"Folding",
        "tags":["folding","icon"]
    },
    {   "comment": "Show gutter's bookmarks column",
        "key": "gutter_bookmarks",
        "def_val": true,
        "chapter":"UI",
        "tags":["env","gutter"]
    },
    {   "comment": "Show gutter's numbers column",
        "key": "numbers_show",
        "def_val": true,
        "chapter":"UI",
        "tags":["env","gutter"]
    },
    {   "comment": "If not 0, special font size used for numbers",
        "key": "numbers_font_size",
        "def_val": 0,
        "chapter":"UI",
        "tags":["env","numbers"]
    },
    {   "comment": "Numbers style",
        "key": "numbers_style",
        "def_val": 0,
        "format": "enum_i",
        "dct":[[0, "all lines"],
               [1, "none"],
               [2, "each 10th line"],
               [3, "each 5th line"]],
        "chapter":"UI",
        "tags":["env","numbers"]
    },
    {   "comment": "Show numbers for lines with carets",
        "key": "numbers_for_carets",
        "def_val": false,
        "chapter":"UI",
        "tags":["env","numbers","caret"]
    },
    {   "comment": "Center numbers on column",
        "key": "numbers_center",
        "def_val": true,
        "chapter":"UI",
        "tags":["env","numbers"]
    },
    {   "comment": ["Style of block-staples (indentation guides)",
                    "(vert lines lefter of {..} blocks)"],
        "key": "staples_style",
        "def_val": 1,
        "format": "enum_i",
        "dct":[
          [0, "don't show"],
          [1, "normal lines"],
          [2, "dash/dotted lines"],
          [3, "2-pixel lines"],
          [4, "dotted lines"]
        ],
        "chapter":"Text",
        "tags":["staples","vert-line"]
    },
    {   "comment": "Show horiz ruler at the top",
        "key": "ruler_show",
        "def_val": false,
        "chapter":"UI",
        "tags":["env","ruler"]
    },
    {   "comment": "If not 0, special font size used for ruler",
        "key": "ruler_font_size",
        "def_val": 8,
        "chapter":"UI",
        "tags":["env","ruler"]
    },
    {   "comment": "Ruler height, pixels",
        "key": "ruler_size",
        "def_val": 20,
        "chapter":"UI",
        "tags":["env","ruler"]
    },
    {   "comment": "Ruler numbers indent from top, pixels",
        "key": "ruler_text_indent",
        "def_val": 0,
        "chapter":"UI",
        "tags":["env","ruler"]
    },
    {   "comment": "Show minimap",
        "key": "minimap_show",
        "def_val": false,
        "chapter":"UI",
        "tags":["env","minimap"]
    },
    {   "comment": "Show selection area always. If false: show selection area only on mouse-over.",
        "key": "minimap_sel_always",
        "def_val": false,
        "chapter":"Selection",
        "tags":["env","minimap","selection"]
    },
    {   "comment": "Show 1-pixel border around selection area",
        "key": "minimap_sel_border",
        "def_val": false,
        "chapter":"Selection",
        "tags":["env","minimap","selection"]
    },
    {   "comment": "Minimap width: 0: autosize, >0: fixed width in chars",
        "key": "minimap_char_width",
        "def_val": 0,
        "chapter":"UI",
        "tags":["env","minimap"]
    },
    {   "comment": "Place minimap to the left side",
        "key": "minimap_at_left",
        "def_val": false,
        "chapter":"UI",
        "tags":["env","minimap"]
    },
    {   "comment": "Show micromap: small vertical bar at the right edge",
        "key": "micromap_show",
        "def_val": false,
        "chapter":"UI",
        "tags":["env","minimap"]
    },
    {   "comment": "Micromap width, pixels",
        "key": "micromap_width",
        "def_val": 12,
        "chapter":"UI",
        "tags":["env","micromap"]
    },
    {   "comment": ["Fixed margin (vertical line) column.",
                    "It is always shown, to hide: set value to eg 2000."],
        "key": "margin",
        "def_val": 80,
        "chapter":"UI",
        "tags":["text","vert-line"]
    },
    {   "comment": "Additional margins, list of columns like \"10 20 25\" space-separated",
        "key": "margin_string",
        "def_val": "",
        "chapter":"UI",
        "tags":["text","vert-line"]
    },
    {   "comment": "Global enable-flag for unprinted_ options below (spaces, ends, details)",
        "key": "unprinted_show",
        "def_val": false,
        "chapter":"Text",
        "tags":["text","unprinted"]
    },
    {   "comment": "Show unprinted spaces/tabs",
        "key": "unprinted_spaces",
        "def_val": true,
        "chapter":"Text",
        "tags":["text","unprinted"]
    },
    {   "comment": "Show unprinted end-of-line marks",
        "key": "unprinted_ends",
        "def_val": true,
        "chapter":"Text",
        "tags":["text","unprinted"]
    },
    {   "comment": "Paint at line-end strings like \"un\", \"win\", \"mac\"",
        "key": "unprinted_end_details",
        "def_val": false,
        "chapter":"Text",
        "tags":["text","unprinted"]
    },
    {   "comment": ["Show control Ascii chars (codes 0..31) as replacement-char",
                    "(else show them as \"xNN\" hex codes)"],
        "key": "unprinted_replace_spec",
        "def_val": false,
        "chapter":"Text",
        "tags":["text","unprinted","hex codes"]
    },
    {   "comment": "Replacement-char hex code",
        "key": "unprinted_replace_to_code",
        "def_val": "A4",
        "chapter":"Text",
        "tags":["text","hex codes"]
    },
    {   "comment": "Paint arrow-down at end-of-line, instead of dot",
        "key": "unprinted_end_arrow",
        "def_val": true,
        "chapter":"Text",
        "tags":["text","unprinted"]
    },
    {   "comment": "Length of arrow for tab-char (1 is minimal, 0 means full size)",
        "key": "unprinted_tab_len",
        "def_val": 1,
        "chapter":"Text",
        "tags":["text","unprinted","tab-char"]
    },
    {   "comment": "Scale (% of char height) of space dot",
        "key": "unprinted_space_dot_scale",
        "def_val": 15,
        "chapter":"Text",
        "tags":["text","unprinted"]
    },
    {   "comment": "Scale of end-of-line dot (if dot shown, not arrow)",
        "key": "unprinted_end_dot_scale",
        "def_val": 30,
        "chapter":"Text",
        "tags":["text","unprinted"]
    },
    {   "comment": "Scale of end-of-line text: \"un\", \"win\", \"mac\"",
        "key": "unprinted_end_font_scale",
        "def_val": 80,
        "chapter":"Text",
        "tags":["text","unprinted"]
    },
    {   "comment": "Scale of tab-arrow pointer (15..50)",
        "key": "unprinted_tab_ptr_scale",
        "def_val": 22,
        "chapter":"Text",
        "tags":["text","unprinted","tab-char"]
    },
    {   "comment": "Wrap mode",
        "key": "wrap_mode",
        "def_val": 0,
        "format": "enum_i",
        "dct":[
              [0, "off (faster)"],
              [1, "wrap at editor edge (changed on window resize)"],
              [2, "wrap at \"fixed margin\""]
        ],
        "chapter":"Text",
        "tags":["text","wrap"]
    },
    {   "comment": ["Show wrapped parts of long line indented, like line itself",
                    "(if line begins with spaces/tabs)"],
        "key": "wrap_indented",
        "def_val": true,
        "chapter":"Text",
        "tags":["text","wrap"]
    },
    {   "comment": "Max count of commands which can \"undo\"",
        "key": "undo_limit",
        "def_val": 5000,
        "chapter":"Undo",
        "tags":["undo"]
    },
    {   "comment": "\"Undo\" takes group of commands (groups are separated eg by mouse clicks)",
        "key": "undo_grouped",
        "def_val": true,
        "chapter":"Undo",
        "tags":["undo"]
    },
    {   "comment": "\"Undo\" enabled even after file saving",
        "key": "undo_after_save",
        "def_val": true,
        "chapter":"Undo",
        "tags":["undo","saving"]
    },
    {   "comment": "Allow to place caret after end-of-line (virtual caret pos)",
        "key": "caret_after_end",
        "def_val": false,
        "chapter":"Caret(s)",
        "tags":["caret"]
    },
    {   "comment": "Caret blink time (msec)",
        "key": "caret_blink_time",
        "def_val": 600,
        "chapter":"Caret(s)",
        "tags":["caret","timing"]
    },
    {   "comment": "Caret blink enabled",
        "key": "caret_blink_en",
        "def_val": true,
        "chapter":"Caret(s)",
        "tags":["caret"]
    },
    {   "comment": "Enable multi-carets, see \"Help--Mouse usage\"",
        "key": "caret_multi",
        "def_val": true,
        "chapter":"Caret(s)",
        "tags":["carets"]
    },
    {   "comment": "Caret shape, normal state",
        "key": "caret_shape",
        "def_val": 1,
        "format": "enum_i",
        "dct":[
             [ 0, "Full"],
             [ 1, "VertPixels1"],
             [ 2, "VertPixels2"],
             [ 3, "VertPixels3"],
             [ 4, "VertPixels4"],
             [ 5, "VertPercents10"],
             [ 6, "VertPercents15"],
             [ 7, "VertPercents20"],
             [ 8, "VertPercents25"],
             [ 9, "VertPercents30"],
             [10, "VertPercents35"],
             [11, "VertPercents40"],
             [12, "VertPercents50"],
             [13, "HorzPixels1"],
             [14, "HorzPixels2"],
             [15, "HorzPixels3"],
             [16, "HorzPixels4"],
             [17, "HorzPixels5"],
             [18, "HorzPercents10"],
             [19, "HorzPercents15"],
             [20, "HorzPercents20"],
             [21, "HorzPercents25"],
             [22, "HorzPercents30"],
             [23, "HorzPercents35"],
             [24, "HorzPercents40"],
             [25, "HorzPercents50"],
             [26, "Frame"]
        ],
        "chapter":"Caret(s)",
        "tags":["caret"]
    },
    {   "comment": "Caret shape, overwrite mode (Ins key: insert/overwrite)",
        "key": "caret_shape_ovr",
        "def_val": 0,
        "format": "enum_i",
        "dct":[
             [ 0, "Full"],
             [ 1, "VertPixels1"],
             [ 2, "VertPixels2"],
             [ 3, "VertPixels3"],
             [ 4, "VertPixels4"],
             [ 5, "VertPercents10"],
             [ 6, "VertPercents15"],
             [ 7, "VertPercents20"],
             [ 8, "VertPercents25"],
             [ 9, "VertPercents30"],
             [10, "VertPercents35"],
             [11, "VertPercents40"],
             [12, "VertPercents50"],
             [13, "HorzPixels1"],
             [14, "HorzPixels2"],
             [15, "HorzPixels3"],
             [16, "HorzPixels4"],
             [17, "HorzPixels5"],
             [18, "HorzPercents10"],
             [19, "HorzPercents15"],
             [20, "HorzPercents20"],
             [21, "HorzPercents25"],
             [22, "HorzPercents30"],
             [23, "HorzPercents35"],
             [24, "HorzPercents40"],
             [25, "HorzPercents50"],
             [26, "Frame"]
        ],
        "chapter":"Caret(s)",
        "tags":["caret"]
    },
    {   "comment": "Caret shape, read-only mode",
        "key": "caret_shape_ro",
        "def_val": 13,
        "format": "enum_i",
        "dct":[
             [ 0, "Full"],
             [ 1, "VertPixels1"],
             [ 2, "VertPixels2"],
             [ 3, "VertPixels3"],
             [ 4, "VertPixels4"],
             [ 5, "VertPercents10"],
             [ 6, "VertPercents15"],
             [ 7, "VertPercents20"],
             [ 8, "VertPercents25"],
             [ 9, "VertPercents30"],
             [10, "VertPercents35"],
             [11, "VertPercents40"],
             [12, "VertPercents50"],
             [13, "HorzPixels1"],
             [14, "HorzPixels2"],
             [15, "HorzPixels3"],
             [16, "HorzPixels4"],
             [17, "HorzPixels5"],
             [18, "HorzPercents10"],
             [19, "HorzPercents15"],
             [20, "HorzPercents20"],
             [21, "HorzPercents25"],
             [22, "HorzPercents30"],
             [23, "HorzPercents35"],
             [24, "HorzPercents40"],
             [25, "HorzPercents50"],
             [26, "Frame"]
        ],
        "chapter":"Caret(s)",
        "tags":["caret"]
    },
    {   "comment": "Caret pos after pasting column-block",
        "key": "caret_after_paste_column",
        "def_val": 5,
        "format": "enum_i",
        "dct":[
              [0, "no change"],
              [1, "left-bottom"],
              [2, "right-bottom"],
              [3, "right-top"],
              [4, "carets column on left"],
              [5, "carets column on right"]
        ],
        "chapter":"Caret(s)",
        "tags":["carets","clipboard"]
    },
    {   "comment": "Find dialog: show window, not docked to app bottom (applied after restart)",
        "key": "find_separate_form",
        "def_val": false,
        "chapter":"Find/Replace",
        "tags":["env","find"]
    },
    {   "comment": "Find dialog: suggest selection (of 1st caret)",
        "key": "find_suggest_sel",
        "def_val": false,
        "chapter":"Find/Replace",
        "tags":["find","selection"]
    },
    {   "comment": "Find dialog: suggest word (at 1st caret)",
        "key": "find_suggest_cur_word",
        "def_val": true,
        "chapter":"Find/Replace",
        "tags":["find"]
    },
    {   "comment": "Find current selection next/prev: case-sensitive state",
        "key": "find_sel_case",
        "def_val": 2,
        "format": "enum_i",
        "dct":[
              [0, "case-sens off"],
              [1, "case-sens on"],
              [2, "use option from Find dialog"]
        ],
        "chapter":"Find/Replace",
        "tags":["find","selection"]
    },
    {   "comment": "Find dialog: show \"find first\" button",
        "key": "find_show_findfirst",
        "def_val": true,
        "chapter":"Find/Replace",
        "tags":["env","find"]
    },
    {   "comment": "Find dialog: multi-line mode: how height of inputs is increased",
        "key": "find_multiline_scale",
        "def_val": 2.5,
        "chapter":"Find/Replace",
        "tags":["env","find"]
    },
    {   "comment": [
            "When doing \"go to\" or \"find\", and new position out of screen,",
            "   scroll to N chars from new position;",
            "Vert indent: N<0: always indent from top;",
            "             N>=0: indent from top (goto up) or bottom (goto down)"],
        "key": "find_indent_vert",
        "def_val": -5,
        "chapter":"Jumping",
        "tags":["find","jumping","scroll"]
    },
    {   "comment": [
            "When doing \"go to\" or \"find\", and new position out of screen,",
            "   scroll to N chars from new position;",
            "Vert indent: N<0: always indent from top;",
            "             N>=0: indent from top (goto up) or bottom (goto down)"],
        "key": "find_indent_horz",
        "def_val": 10,
        "chapter":"Find/Replace",
        "tags":["find","jumping","scroll"]
    },
    {   "comment": "Tabs width, height",
        "key": "ui_tab_size_x",
        "def_val": 170,
        "chapter":"UI",
        "tags":["env","tabs"]
    },
    {   "comment": "Tabs width, height",
        "key": "ui_tab_size_y",
        "def_val": 25,
        "chapter":"UI",
        "tags":["env","tabs"]
    },
    {   "comment": "Indent of text on tabs",
        "key": "ui_tab_indent_x",
        "def_val": 5,
        "chapter":"UI",
        "tags":["env","tabs"]
    },
    {   "comment": "Angle of tab edge, it's set in pixel shift, 0..10",
        "key": "ui_tab_angle",
        "def_val": 3,
        "chapter":"UI",
        "tags":["env","tabs"]
    },
    {   "comment": "Show tabs at bottom",
        "key": "ui_tab_bottom",
        "def_val": false,
        "chapter":"UI",
        "tags":["env","tabs"]
    },
    {   "comment": "Show \"x\" buttons on tabs",
        "key": "ui_tab_show_x",
        "def_val": 1,
        "format": "enum_i",
        "dct":[
          [0, "dont show"],
          [1, "for all tabs"],
          [2, "for active tab"],
          [3, "for mouse-over tab"]
        ],
        "chapter":"UI",
        "tags":["env","tabs"]
    },
    {   "comment": "Show \"+\" pseudo-tab",
        "key": "ui_tab_show_plus",
        "def_val": true,
        "chapter":"UI",
        "tags":["env","tabs"]
    },
    {   "comment": "Command \"Set tab color\" paints entire tab",
        "key": "ui_tab_fullcolor",
        "def_val": false,
        "chapter":"UI",
        "tags":["env","tabs","color"]
    },
    {   "comment": "Double-click closes tab",
        "key": "ui_tab_2click_closes",
        "def_val": false,
        "chapter":"UI",
        "tags":["env","tabs"]
    },
    {   "comment": "Show numbers on tabs",
        "key": "ui_tab_numbers",
        "def_val": false,
        "chapter":"UI",
        "tags":["env","tabs"]
    },
    {   "comment": "Commands/API listbox size",
        "key": "ui_listbox_size_x",
        "def_val": 450,
        "chapter":"UI",
        "tags":["env","commands"]
    },
    {   "comment": "Commands/API listbox size",
        "key": "ui_listbox_size_y",
        "def_val": 300,
        "chapter":"UI",
        "tags":["env","commands"]
    },
    {   "comment": "Auto-completion listbox size",
        "key": "ui_listbox_complete_size_x",
        "def_val": 550,
        "chapter":"Completion",
        "tags":["env","completion"]
    },
    {   "comment": "Auto-completion listbox size",
        "key": "ui_listbox_complete_size_y",
        "def_val": 200,
        "chapter":"Completion",
        "tags":["env","completion"]
    },
    {   "comment": "Enables fuzzy search in menu-dialogs (else search is normal)",
        "key": "ui_listbox_fuzzy",
        "def_val": true,
        "chapter":"UI",
        "tags":["env"]
    },
    {   "comment": "Max items in comboboxes history (0..200)",
        "key": "ui_max_history_edits",
        "def_val": 20,
        "chapter":"History",
        "tags":["env","history"]
    },
    {   "comment": "Max items in \"recent files\" menu (0..50)",
        "key": "ui_max_history_menu",
        "def_val": 10,
        "chapter":"History",
        "tags":["env","history"]
    },
    {   "comment": "Max items in \"settings/history files.json\" (0..400)",
        "key": "ui_max_history_files",
        "def_val": 25,
        "chapter":"History",
        "tags":["env","history"]
    },
    {   "comment": "Close program by Esc key",
        "key": "ui_esc_close",
        "def_val": false,
        "chapter":"",
        "tags":["env","esc"]
    },
    {   "comment": "Close Console by Esc key",
        "key": "ui_esc_close_console",
        "def_val": true,
        "chapter":"",
        "tags":["env","esc"]
    },
    {   "comment": "Initial folder of Open/Save-as dialogs, for untitled tabs",
        "key": "ui_initial_dir",
        "def_val": "",
        "chapter":"File",
        "tags":["file","open","saving"]
    },
    {   "comment": ["[Syntax-tree]",
                    "Focus another tree-node, after caret position changes"],
        "key": "ui_tree_auto_sync",
        "def_val": true,
        "chapter":"Syntax-tree",
        "tags":["env","tree"]
    },
    {   "comment": ["[Syntax-tree]",
                    "Time (msec) after which tree filled"],
        "key": "ui_tree_time_fill",
        "def_val": 2000,
        "chapter":"Syntax-tree",
        "tags":["env","tree"]
    },
    {   "comment": ["[Syntax-tree]",
                    "Time (msec) after which tree-node for caret focuses"],
        "key": "ui_tree_time_focus",
        "def_val": 300,
        "chapter":"Syntax-tree",
        "tags":["env","tree"]
    },
    {   "comment": ["[Syntax-tree]",
                    "Show vertical/horiz lines in tree"],
        "key": "ui_tree_show_lines",
        "def_val": true,
        "chapter":"Syntax-tree",
        "tags":["env","tree"]
    },
    {   "comment": ["[Syntax-tree]",
                    "Show icons in tree (for lexers which assign icons, e.g. C#)"],
        "key": "ui_tree_icons",
        "def_val": true,
        "chapter":"Syntax-tree",
        "tags":["env","tree","icon"]
    },
    {   "comment": ["[Properties of new tabs]",
                    "Lexer name in lexers menu"],
        "key": "newdoc_lexer",
        "def_val": "",
        "chapter":"File",
        "tags":["open","lexer"]
    },
    {   "comment": ["[Properties of new tabs]",
                    "Encoding name (allowed names: see encodings menu):",
                    "\"UTF-8\", \"UTF-8 with BOM\", \"UTF-16 LE with BOM\", \"ANSI\", \"CP1250\" etc"],
        "key": "newdoc_encoding",
        "def_val": "UTF-8",
        "chapter":"File",
        "tags":["open","encoding"]
    },
    {   "comment": ["[Properties of new tabs]",
                    "End-of-lines"],
        "key": "newdoc_eol",
        "def_val": 1,
        "format": "enum_i",
        "dct":[
          [1, "Win "],
          [2, "Unix"],
          [3, "MacOS 9"]
        ],
        "chapter":"File",
        "tags":["open"]
    },
    {   "comment": "Auto-indent by Enter (makes new line indented)",
        "key": "indent_auto",
        "def_val": true,
        "chapter":"Indenting",
        "tags":["indenting","enter"]
    },
    {   "comment": "Auto-indent kind",
        "key": "indent_kind",
        "def_val": 0,
        "format": "enum_i",
        "dct":[
              [0, "indent like in prev line"],
              [1, "by spaces"],
              [2, "by tabs+spaces"],
              [3, "by tabs only"]
        ],
        "chapter":"Indenting",
        "tags":["indenting"]
    },
    {   "comment": ["Indent size for Indent/Unindent commands:",
                    " in chars (n>0) or in tabs (n<0)"],
        "key": "indent_size",
        "def_val": 2,
        "chapter":"Indenting",
        "tags":["indenting"]
    },
    {   "comment": ["Unindent command (Shift+Tab): if several lines (in block) have different indent,",
                    "stop unindent if one line already at left edge (other lines wont be moved)"],
        "key": "unindent_keeps_align",
        "def_val": true,
        "chapter":"Indenting",
        "tags":["indenting","tab-key"]
    },
    {   "comment": "Drag-drop of text blocks",
        "key": "mouse_drag_drop",
        "def_val": true,
        "chapter":"Drag-drop",
        "tags":["drag","mouse"]
    },
    {   "comment": "After drag-drop of text block to another group, focus target editor",
        "key": "mouse_drag_drop_focus_target",
        "def_val": true,
        "chapter":"Drag-drop",
        "tags":["drag","mouse"]
    },
    {   "comment": "Right-click moves caret, before menu",
        "key": "mouse_rt_click_moves_caret",
        "def_val": false,
        "chapter":"Caret(s)",
        "tags":["caret","mouse"]
    },
    {   "comment": "Dbl-click and immediately drag makes selection by words",
        "key": "mouse_2click_drag_select_words",
        "def_val": true,
        "chapter":"Drag-drop",
        "tags":["drag","mouse","selection"]
    },
    {   "comment": "Middle-click shows circle, then mouse-move near circle does auto-scrolling",
        "key": "mouse_browser_scroll",
        "def_val": true,
        "chapter":"",
        "tags":["mouse","scroll"]
    },
    {   "comment": "Enable selection of vertical blocks (Alt+drag)",
        "key": "mouse_column_selection",
        "def_val": true,
        "chapter":"Selection",
        "tags":["drag","mouse","selection"]
    },
    {   "comment": "Select entire line if clicked line number",
        "key": "mouse_gutter_click_sel",
        "def_val": true,
        "chapter":"Selection",
        "tags":["mouse","selection","gutter"]
    },
    {   "comment": "Allow to zoom text using Ctrl+mouse wheel",
        "key": "mouse_wheel_zoom",
        "def_val": false,
        "chapter":"",
        "tags":["mouse","zoom"]
    },
    {   "comment": "Call Goto-Definition command, by click with modifier key",
        "key": "mouse_goto_definition",
        "def_val": "a",
        "format": "enum_s",
        "dct":[
              ["", "disabled"],
              ["a", "by Alt+click"],
              ["sa", "by Shift+Alt+click"],
              ["ca", "by Ctrl+Alt+click"],
              ["sca", "by Shift+Ctrl+Alt+click"]
        ],
        "chapter":"Jumping",
        "tags":["jumping"]
    },
    {   "comment": "Key BkSp: do unindent too (if caret inside indented area)",
        "key": "key_bksp_unindent",
        "def_val": true,
        "chapter":"Indenting",
        "tags":["indenting"]
    },
    {   "comment": "Key Tab: do block-indent too (if selection)",
        "key": "key_tab_indents_sel",
        "def_val": true,
        "chapter":"Indenting",
        "tags":["indenting","tab-key","selection"]
    },
    {   "comment": "Key Home: first jump to nonspace, next to line start",
        "key": "key_home_to_nonspace",
        "def_val": true,
        "chapter":"Jumping",
        "tags":["jumping"]
    },
    {   "comment": "Key End: first jump to ending nonspace, next to line end",
        "key": "key_end_to_nonspace",
        "def_val": true,
        "chapter":"Jumping",
        "tags":["jumping"]
    },
    {   "comment": ["Keys Home/End: when moving on long wrapped lines, treat wrapped parts like",
                    "separate lines and first jump to wrapped parts edge, next to line edge"],
        "key": "key_home_end_nav_wrapped",
        "def_val": true,
        "chapter":"Jumping",
        "tags":["jumping"]
    },
    {   "comment": "Keys PageUp/PageDown: keep relative offset from top of editor",
        "key": "key_page_keeps_rel_pos",
        "def_val": true,
        "chapter":"Jumping",
        "tags":["jumping","scroll"]
    },
    {   "comment": "Keys PageUp/PageDown page size",
        "key": "key_page_size",
        "def_val": 1,
        "format": "enum_i",
        "dct":[
          [0, "full height"],
          [1, "full minus 1"],
          [2, "half height"]
        ],
        "chapter":"Jumping",
        "tags":["jumping","scroll"]
    },
    {   "comment": ["Keys Up/Down: try to keep caret column",
                    "(if moving from long line, to short line, to long line again)"],
        "key": "key_up_down_keeps_column",
        "def_val": true,
        "chapter":"Jumping",
        "tags":["jumping","caret"]
    },
    {   "comment": ["Keys Up/Down: when moving on long wrapped lines, treat wrapped parts",
                    "like separate lines and try to jump to position above/below previous"],
        "key": "key_up_down_nav_wrapped",
        "def_val": true,
        "chapter":"Jumping",
        "tags":["jumping","caret"]
    },
    {   "comment": "Keys Left/Right: if selection exists, try to jump to opposite selection edge",
        "key": "key_left_right_swap_sel",
        "def_val": true,
        "chapter":"Jumping",
        "tags":["jumping","caret","selection"]
    },
    {   "comment": ["Keys Left/Right: if selection exists, try to jump to opposite selection edge",
                    "and keep previous selection"],
        "key": "key_left_right_swap_sel_and_select",
        "def_val": false,
        "chapter":"Jumping",
        "tags":["jumping","caret","selection"]
    },
    {   "comment": [
        "[Statusbar: caret-panel]",
        "States: no-selection, small-selection (1 line), stream-selection (>1 lines),",
        "    column-selection, mul-carets.",
        "Macros:",
        "    {y}: line of top caret",
        "    {y2}: line of bottom caret",
        "    {yb}: line of 1st selection begin",
        "    {ye}: line of 1st selection end",
        "    {x}: column of top caret, tab-chars counted as 1",
        "    {xx}: column of top caret, tab-chars expanded",
        "    {count}: number of lines",
        "    {carets}: number of carets",
        "    {sel}: number of lines affected by selection(s)",
        "    {cols}: number of columns in column-selection"],
        "key": "ui_statusbar_no_sel",
        "def_val": "Ln {y}, Col {xx}",
        "chapter":"Statusbar",
        "tags":["env","statusbar"]
    },
    {   "comment": [
        "[Statusbar: caret-panel]",
        "States: no-selection, small-selection (1 line), stream-selection (>1 lines),",
        "    column-selection, mul-carets.",
        "Macros:",
        "    {y}: line of top caret",
        "    {y2}: line of bottom caret",
        "    {yb}: line of 1st selection begin",
        "    {ye}: line of 1st selection end",
        "    {x}: column of top caret, tab-chars counted as 1",
        "    {xx}: column of top caret, tab-chars expanded",
        "    {count}: number of lines",
        "    {carets}: number of carets",
        "    {sel}: number of lines affected by selection(s)",
        "    {cols}: number of columns in column-selection"],
        "key": "ui_statusbar_small_sel",
        "def_val": "Ln {y}, Col {xx}, sel",
        "chapter":"Statusbar",
        "tags":["env","statusbar"]
    },
    {   "comment": [
        "[Statusbar: caret-panel]",
        "States: no-selection, small-selection (1 line), stream-selection (>1 lines),",
        "    column-selection, mul-carets.",
        "Macros:",
        "    {y}: line of top caret",
        "    {y2}: line of bottom caret",
        "    {yb}: line of 1st selection begin",
        "    {ye}: line of 1st selection end",
        "    {x}: column of top caret, tab-chars counted as 1",
        "    {xx}: column of top caret, tab-chars expanded",
        "    {count}: number of lines",
        "    {carets}: number of carets",
        "    {sel}: number of lines affected by selection(s)",
        "    {cols}: number of columns in column-selection"],
        "key": "ui_statusbar_str_sel",
        "def_val": "Ln {y}, Col {xx}, {sel} lines sel",
        "chapter":"Statusbar",
        "tags":["env","statusbar"]
    },
    {   "comment": [
        "[Statusbar: caret-panel]",
        "States: no-selection, small-selection (1 line), stream-selection (>1 lines),",
        "    column-selection, mul-carets.",
        "Macros:",
        "    {y}: line of top caret",
        "    {y2}: line of bottom caret",
        "    {yb}: line of 1st selection begin",
        "    {ye}: line of 1st selection end",
        "    {x}: column of top caret, tab-chars counted as 1",
        "    {xx}: column of top caret, tab-chars expanded",
        "    {count}: number of lines",
        "    {carets}: number of carets",
        "    {sel}: number of lines affected by selection(s)",
        "    {cols}: number of columns in column-selection"],
        "key": "ui_statusbar_col_sel",
        "def_val": "{sel}x{cols} column",
        "chapter":"Statusbar",
        "tags":["env","statusbar"]
    },
    {   "comment": [
        "[Statusbar: caret-panel]",
        "States: no-selection, small-selection (1 line), stream-selection (>1 lines),",
        "    column-selection, mul-carets.",
        "Macros:",
        "    {y}: line of top caret",
        "    {y2}: line of bottom caret",
        "    {yb}: line of 1st selection begin",
        "    {ye}: line of 1st selection end",
        "    {x}: column of top caret, tab-chars counted as 1",
        "    {xx}: column of top caret, tab-chars expanded",
        "    {count}: number of lines",
        "    {carets}: number of carets",
        "    {sel}: number of lines affected by selection(s)",
        "    {cols}: number of columns in column-selection"],
        "key": "ui_statusbar_carets",
        "def_val": "{carets} carets, {sel} lines sel",
        "chapter":"Statusbar",
        "tags":["env","statusbar"]
    },
    {   "comment": [
            "Statusbar panels (can skip items, can reorder items)",
            "    Panels: caret, enc, ends, lexer, tabsize, msg, ins (hidden by default)",
            "    Align: C (center), L (left), R (right)",
            "    Panel \"msg\" is autosized"],
        "key": "ui_statusbar_panels",
        "def_val": "caret,C,170|enc,C,105|ends,C,50|lexer,C,140|tabsize,C,80|msg,L,",
        "chapter":"Statusbar",
        "tags":["env","statusbar"]
    },
    {   "comment": "Statusbar height",
        "key": "ui_statusbar_height",
        "def_val": 24,
        "chapter":"Statusbar",
        "tags":["env","statusbar"]
    },
    {   "comment": "Statusbar popup message: time in seconds",
        "key": "ui_statusbar_time",
        "def_val": 5,
        "chapter":"Statusbar",
        "tags":["env","statusbar","timing"]
    },
    {   "comment": [
              "Statusbar: tabsize-panel. Macros here:",
              "  {tab}: tab size",
              "  {_}: char \"_\" if spaces used"],
        "key": "ui_statusbar_tabsize",
        "def_val": "Tab size {tab}{_}",
        "chapter":"Statusbar",
        "tags":["env","statusbar"]
    },
    {   "comment": "Show full file path in window title",
        "key": "ui_title_path",
        "def_val": false,
        "chapter":"UI",
        "tags":["env"]
    },
    {   "comment": "Restore session (all named+unnamed tabs) at start",
        "key": "ui_reopen_session",
        "def_val": true,
        "chapter":"History",
        "tags":["history","start"]
    },
    {   "comment": "Allow to apply color-theme to lexer's styles (and auto-show dialog \"Lexer styles mapping\")",
        "key": "ui_lexer_themes",
        "def_val": true,
        "chapter":"Lexer",
        "tags":["lexer","theme"]
    },
    {   "comment": [
          "[Underline HTML color tokens like #008080, #0a0]",
          "File extensions, comma-separated, w/o dot; \"*\" for all files, empty str to disable"],
        "key": "underline_color_files",
        "def_val": "*",
        "chapter":"Text",
        "tags":["text"]
    },
    {   "comment": "Width of line, pixels",
        "key": "underline_color_size",
        "def_val": 3,
        "chapter":"Text",
        "tags":["text"]
    },
    {   "comment": "Options for \"File--Export to HTML\"",
        "key": "export_html_numbers",
        "def_val": false,
        "chapter":"File",
        "tags":["export"]
    },
    {   "comment": "Options for \"File--Export to HTML\"",
        "key": "export_html_font_name",
        "def_val": "Courier New",
        "chapter":"File",
        "tags":["export"]
    },
    {   "comment": "Options for \"File--Export to HTML\"",
        "key": "export_html_font_size",
        "def_val": 12,
        "chapter":"File",
        "tags":["export"]
    },
    {   "comment": "API: delay for on_change_slow",
        "key": "py_change_slow",
        "def_val": 2000,
        "chapter":"",
        "tags":["trick"]
    },
    {   "comment": [
          "[Settings for command \"toggle line comment\"]",
          "If no selection then comment full line"],
        "key": "comment_full_line_if_no_sel",
        "def_val": true,
        "chapter":"Commenting",
        "tags":["commenting"]
    },
    {   "comment": [
          "[Settings for command \"toggle line comment\"]",
          "If no selection then move caret to next line"],
        "key": "comment_move_down",
        "def_val": true,
        "chapter":"Commenting",
        "tags":["commenting","jumping"]
    },
    {   "comment": [
          "[Settings for command \"toggle line comment\"]",
          "Try to save chars positions in line after commenting/uncommenting"],
        "key": "comment_save_column",
        "def_val": false,
        "chapter":"Commenting",
        "tags":["commenting","jumping"]
    },
    {   "comment": [
          "[Settings for command \"toggle line comment\"]",
          "If selected >1 lines, insert comment at maximal common indent"],
        "key": "comment_equal_column",
        "def_val": false,
        "chapter":"Commenting",
        "tags":["commenting"]
    },
    {   "comment": [
          "[Settings for command \"duplicate line (advanced)\"]",
          "If no selection then duplicate full line"],
        "key": "duplicate_full_line_if_no_sel",
        "def_val": true,
        "chapter":"",
        "tags":["duplication"]
    },
    {   "comment": [
          "[Settings for command \"duplicate line (advanced)\"]",
          "If no selection then move caret to next line"],
        "key": "duplicate_move_down",
        "def_val": true,
        "chapter":"",
        "tags":["duplication","jumping"]
    },
    {   "comment": "Enable special auto-completion for HTML lexer (see wiki)",
        "key": "autocomplete_html",
        "def_val": true,
        "chapter":"Completion",
        "tags":["completion","lexer"]
    },
    {   "comment": "Enable special auto-completion for CSS lexer (see wiki)",
        "key": "autocomplete_css",
        "def_val": true,
        "chapter":"Completion",
        "tags":["completion","lexer"]
    },
    {   "comment": "Auto-show auto-completion after typing N word-chars (0: disabled)",
        "key": "autocomplete_autoshow_chars",
        "def_val": 0,
        "chapter":"Completion",
        "tags":["completion"]
    },
    {   "comment": [
          "Auto-show auto-completion after typing N word-chars.",
          "For which lexers (comma-separated, empty: disabled)",
          "Don't add here lexers HTML/CSS, they have own auto-show",
          "(which is intelligent, only at needed HTML/CSS place).",
          "Use \"-\" for none-lexer."],
        "key": "autocomplete_autoshow_lexers",
        "def_val": "",
        "chapter":"Completion",
        "tags":["completion","lexer"]
    },
    {   "comment": ["Auto-close brackets/quotes. Skips escaped chars, eg \\(.",
                    "Value can have only chars: ( [ { ' \" ` (double-quote needs escape in json)"],
        "key": "auto_close_brackets",
        "def_val": "([{",
        "chapter":"Completion",
        "tags":["completion"]
    },
    {   "comment": "Extensions of picture files (shown as pictures)",
        "key": "picture_types",
        "def_val": "bmp,png,jpg,jpeg,jpe,gif,ico",
        "chapter":"",
        "tags":["open"]
    },
    {   "comment": "Highlight URLs (font color+ underline)",
        "key": "links_hilite",
        "def_val": true,
        "chapter":"Text",
        "tags":["text","highlighting"]
    },
    {   "comment": "Reg-ex which finds URLs",
        "key": "links_regex",
        "def_val": "\\b(https?://|ftp://|magnet:\\?|www\\.)\\w[^<>''\"\\s]+",
        "chapter":"Text",
        "tags":["text","highlighting"]
    },
    {   "comment": "Maximal file size, to open, in Mb",
        "key": "ui_max_size_open",
        "def_val": 30,
        "chapter":"",
        "tags":["trick","open"]
    },
    {   "comment": "Maximal file size, for which allowed to use lexers, in Mb",
        "key": "ui_max_size_lexer",
        "def_val": 4,
        "chapter":"Lexer",
        "tags":["trick","open","lexer"]
    },
    {   "comment": [
          "On calling Full Screen, hide these elements",
          "  if value has \"t\": toolbar",
          "  if value has \"s\": statusbar",
          "  if value has \"b\": bottom panel",
          "  if value has \"S\": side panel"],
        "key": "ui_fullscreen_hide",
        "def_val": "t",
        "chapter":"UI",
        "tags":["env"]
    },
    {   "comment": ["Enable to make log files, for plugin dialogs (dlg_custom)",
                    "Files are %temp%\\dlg_nnnnnnnnnnnnn.txt"],
        "key": "log_dialogs",
        "def_val": false,
        "chapter":"",
        "tags":["trick"]
    }
]
